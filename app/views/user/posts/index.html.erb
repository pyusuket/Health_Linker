<%= render 'user/shared/flash_message' %>

<!--検索フォーム-->
<div class="mb-6 mx-auto max-w-screen-2xl flex flex-col md:flex-row items-center justify-between gap-4 mt-16">
  <%= form_with(url: user_posts_path, method: "get", class: "flex w-full md:w-auto") do |form| %>
    <div class="relative w-full md:w-full">
      <%= form.text_field :search, id: "search-field", class: "rounded-lg border my-4 px-4 py-2 text-sm text-gray-600 focus:outline-none focus:ring-2 focus:ring-blue-600 focus:border-transparent w-full md:w-96", placeholder: "検索したいキーワードを入力してください" %>
      <button type="button" class="absolute right-0 top-1/2 transform -translate-y-1/2 mr-2 py-2 text-gray-600" onclick="clearSearchField()">
        <i class="fas fa-times"></i>
      </button>
    </div>
  <% end %>
</div>

<div id="no-results-message" class="text-center text-gray-500 mt-4" style="display: none;">
  検索に一致する投稿がありませんでした。
</div>

<div class="px-2 grid gap-x-2 gap-y-2 sm:grid-cols-2 md:gap-x-2 lg:grid-cols-3 xl:grid-cols-4">
  <% @posts.each do |post| %>
    <% user_path = current_user && current_user.id == post.user.id ? user_homes_mypage_path : user_user_path(post.user.id) %>
    <div class="relative post">
      <div class="flex items-center"> 
        <%= link_to user_path do %>
          <%= image_tag(post.user.profile_image.presence || "no_image.jpg", class: "w-10 h-10 rounded-full m-2") %>
        <% end %>
        <span class="font-bold"><%= link_to post.user.user_name, user_path %></span> 
      </div>
        <%= post.images.attached? ? link_to(user_post_path(post)) { image_tag(post.images.first, class: "w-full h-80 object-cover rounded-lg") } : content_tag(:p, "no_image", class: "w-full h-80 object-cover rounded-lg") %>
      <div class="flex items-center justify-between m-2">
        <div class="flex items-center">
          <% niceness_class = post.nices.exists?(user_id: current_user.id) ? "fa-solid fa-heart fa-xl text-pink-500" : "fa-regular fa-heart fa-xl" %>
          <% niceness_method = post.nices.exists?(user_id: current_user.id) ? :delete : :post %>
          <%= link_to user_post_nices_path(post), method: niceness_method, class: "nice-link" do %>
            <i class="<%= niceness_class %>"></i>
            <span class="niceness-count text-sm text-gray-500"><%= post.nices.count %></span>
          <% end %>
          <div class="flex items-center ml-4">
            <i class="fa-solid fa-comment fa-xl text-yellow-500 mr-1"></i>
            <span class="text-sm text-gray-500"><%= post.comments.count %></span>
          </div>
        </div>
        <p class="text-sm text-gray-500"><%= post.created_at.strftime("%Y/%-m/%-d %-H:%M") %></p>
      </div>
      <% truncated_body = post.body.length > 20 ? post.body[0..20] + '...' : post.body %>
      <p class="whitespace-pre-line m-2"><%= truncated_body %></p>
      <div class="tags m-2">
        <% post.tags.limit(4).each do |tag| %>
          <%= link_to "##{tag.name}", user_post_searches_path(post_id: post.id, tag_id: tag.id), class: "tag inline-block bg-gray-200 rounded-md px-3 py-1 text-sm font-semibold text-gray-700" %>
        <% end %>
        <% if post.tags.count > 4 %>
          <span class="tag inline-block bg-gray-200 rounded-md px-3 py-1 text-sm font-semibold text-gray-700">...</span>
        <% end %>
      </div>
      <%= form_with(model: [post, Comment.new], url: user_post_comments_path(post)) do |f| %>
        <div class="m-2 flex justify-end">
          <%= f.text_area :body, rows: '1', placeholder: "コメントをここに", class: "w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring focus:border-indigo-500 text-sm" %>
          <%= f.submit "送信", class: "ml-2 rounded-lg border bg-green-500 hover:bg-green-600 focus:bg-green-600 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-opacity-50 px-4 py-2 text-center text-sm font-semibold text-white transition duration-300 ease-in-out md:px-8 md:py-3 md:text-base" %>
        </div>
      <% end %>
    </div>
  <% end %>
</div>

<script>
  //お気に入り処理
  document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('.nice-link').forEach(function(link) {
      link.addEventListener('click', function(event) {
        event.preventDefault();
        var postId = this.dataset.postId;
        var nicenessCount = this.querySelector('.niceness-count');
        
        fetch(this.href, {
          method: 'POST', 
          headers: {
            'X-CSRF-Token': '<%= form_authenticity_token %>',
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ postId: postId })
        })
        .then(response => response.json())
        .then(data => {
          nicenessCount.textContent = data.nices_count;
          var heartIcon = this.querySelector('i');
          if (data.niced_by_current_user) {
            heartIcon.classList.remove('fa-regular');
            heartIcon.classList.add('fa-solid');
            heartIcon.style.color = '#f882bb';
          } else {
            heartIcon.classList.remove('fa-solid');
            heartIcon.classList.add('fa-regular');
            heartIcon.style.color = '#d9d3d6';
          }
        })
        .catch(error => console.error('Error:', error));
      });
    });
  });

  // 検索フォーム（キーワード絞り込み）
  document.addEventListener('DOMContentLoaded', function() {
    const searchInput = document.querySelector('form input[type="text"]');
    const posts = document.querySelectorAll('.post');
    const noResultsMessage = document.getElementById('no-results-message');
  
    searchInput.addEventListener('keyup', function() {
      const searchTerm = searchInput.value.trim().toLowerCase();
      let foundMatch = false;
  
      posts.forEach(post => {
        const postBody = post.querySelector('.whitespace-pre-line').textContent.toLowerCase(); // 本文全体を取得
        const postTags = post.querySelectorAll('.tag');
        let tagContent = '';
        postTags.forEach(tag => {
          tagContent += tag.textContent.toLowerCase() + ' ';
        });
  
        if (postBody.includes(searchTerm) || tagContent.includes(searchTerm)) {
          post.style.display = 'block';
          foundMatch = true;
        } else {
          post.style.display = 'none';
        }
      });
  
      if (!foundMatch) {
        noResultsMessage.style.display = 'block';
      } else {
        noResultsMessage.style.display = 'none';
      }
    });
  });

  // フォーム内を空にする
  function clearSearchField() {
    document.querySelector("#search-field").value = "";
    location.reload();
  }
  
</script>

<%= javascript_pack_tag 'scroll_hold' %>
