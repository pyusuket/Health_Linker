<div class="flex items-center mt-20 m-2">
  <h1 class="text-2xl font-bold text-gray-800">管理グラフ</h1>
</div>

<!-- アクティブユーザー数 -->
<div class="mb-8 mt-4">
  <h2 class="text-lg font-bold mb-4">アクティブユーザー数</h2>
  <div class="mb-8">
    <label for="dateRange" class="text-lg font-bold mb-2">期間絞り込み</label>
    <select id="dateRange" class="block w-full p-2 border border-gray-300 rounded-md">
      <option value="7">過去7日間</option>
      <option value="30">過去30日間</option>
      <option value="90">過去90日間</option>
      <option value="365">過去1年間</option>
    </select>
  </div>

  <canvas id="activeUsersChart"></canvas>
  <script>
  document.addEventListener('DOMContentLoaded', function() {
    var ctx = document.getElementById('activeUsersChart').getContext('2d');
    var dateRangeSelect = document.getElementById('dateRange');
    var activeUsersChart;

    // チャートを初期化する関数
    function initializeChart(data) {
      activeUsersChart = new Chart(ctx, {
        type: 'line',
        data: {
          labels: Object.keys(data),
          datasets: [{
            label: 'アクティブユーザー数',
            data: Object.values(data),
            fill: false,
            borderColor: 'rgb(75, 192, 192)',
            tension: 0.1
          }]
        },
        options: {
          scales: {
            y: {
              beginAtZero: true
            }
          }
        }
      });
    }

    // 初期チャートを描画
    initializeChart(<%= raw @javascript_data %>);


    // 期間絞り込みの変更を監視
    dateRangeSelect.addEventListener('change', function() {
      var selectedRange = this.value;
      updateCharts(selectedRange);
    });

    // チャートを更新する関数
    function updateCharts(selectedRange) {
      $.ajax({
        url: '/admin/homes/top',
        method: 'GET',
        data: { range: selectedRange },
        dataType: 'json',
        success: function(data) {
          // データを取得したらグラフを更新する
          activeUsersChart.data.labels = Object.keys(data);
          activeUsersChart.data.datasets[0].data = Object.values(data);
          activeUsersChart.update();
        },
        error: function(xhr, status, error) {
          console.error('データの取得に失敗しました:', error);
        }
      });
    }
  });
</script>

</div>

<!-- 新規登録数 -->
<div class="mb-8">
  <h2 class="text-lg font-bold mb-4">新規登録数</h2>
    <canvas id="newUsersChart"></canvas>
  <script>
    var newUsersData = <%= @daily_new_active_users.to_json.html_safe %>;
    var newdayData = Object.values(newUsersData);
    var newdates = Object.keys(newUsersData);
    var ctx2 = document.getElementById('newUsersChart').getContext('2d');
    var newUsersChart = new Chart(ctx2, {
      type: 'line',
      data: {
        labels: newdates,
        datasets: [{
          label: '新規登録者数',
          data: newdayData,
          fill: false,
          borderColor: 'rgb(75, 192, 192)',
          tension: 0.1
        }]
      },
      options: {
        scales: {
          y: {
            beginAtZero: true
          }
        }
      }
    });
    var newUsersChartCanvas = document.getElementById('newUsersChart');
    newUsersChartCanvas.width = newUsersChartCanvas.parentElement.clientWidth;
    newUsersChartCanvas.height = newUsersChartCanvas.parentElement.clientHeight;
  </script>
</div>

<!-- ページビュー数 -->
<div class="mb-8">
  <h2 class="text-lg font-bold mb-4">ページビュー数</h2>
  <canvas id="pageViewsChart" width="800" height="400"></canvas>
  <script>
    document.addEventListener('turbolinks:load', function () {
      var pageViewsData = <%= @page_views_data.to_json.html_safe %>;
      var pageIds = Object.keys(pageViewsData);
      var pageViews = Object.values(pageViewsData);
      var ctx = document.getElementById('pageViewsChart').getContext('2d');
      window.pageViewsChart = new Chart(ctx, {
        type: 'bar',
        data: {
          labels: pageIds,
          datasets: [{
            label: 'ページビュー数',
            data: pageViews,
            backgroundColor: 'rgb(75, 192, 192)',
            borderWidth: 1
          }]
        },
        options: {
          scales: {
            y: {
              beginAtZero: true
            }
          }
        }
      });
    });
  </script>
</div>

